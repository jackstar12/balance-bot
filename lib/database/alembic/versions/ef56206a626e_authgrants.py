"""authgrants

Revision ID: ef56206a626e
Revises: bd3550f6de65
Create Date: 2022-11-03 18:58:31.675625

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ef56206a626e'
down_revision = 'bd3550f6de65'
branch_labels = None
depends_on = None


def upgrade():
    session = Session(bind=op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authgrant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('public', sa.Boolean(), server_default='False', nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chaptergrant',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('grant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['event.id'], name='event_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['grant_id'], ['authgrant.id'], name='authgrant_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('chapter_id', 'grant_id')
    )
    op.create_table('eventgrant',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('registrations_left', sa.Integer(), nullable=True),
    sa.Column('grant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='event_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['grant_id'], ['authgrant.id'], name='authgrant_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'grant_id')
    )
    op.create_table('tradegrant',
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.Column('grant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grant_id'], ['authgrant.id'], name='authgrant_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.id'], name='trade_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trade_id', 'grant_id')
    )
    op.create_table('journalgrant',
    sa.Column('journal_id', sa.Integer(), nullable=False),
    sa.Column('grant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grant_id'], ['authgrant.id'], name='authgrant_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['journal_id'], ['journal.id'], name='journal_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('journal_id', 'grant_id')
    )
    op.alter_column('journal', 'chapter_interval',
               existing_type=postgresql.INTERVAL(),
               type_=sa.Enum('DAY', 'WEEK', 'MONTH', name='intervaltype'),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade():
    session = Session(bind=op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('journal', 'chapter_interval',
               existing_type=sa.Enum('DAY', 'WEEK', 'MONTH', name='intervaltype'),
               type_=postgresql.INTERVAL(),
               existing_nullable=True)
    op.drop_table('journalgrant')
    op.drop_table('tradegrant')
    op.drop_table('eventgrant')
    op.drop_table('chaptergrant')
    op.drop_table('authgrant')
    # ### end Alembic commands ###
